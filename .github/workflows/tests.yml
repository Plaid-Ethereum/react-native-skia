name: Tests
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        working-directory: [apps/paper, apps/fabric]
    concurrency:
      group: tests-${{ matrix.working-directory }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup
        uses: ./.github/actions/setup
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install clang-format
        run: sudo apt-get install -y clang-format

      # - name: Run clang-format-ios
      #   working-directory: packages/skia
      #   run: yarn clang-format-ios --dry-run --Werror

      # - name: Run clang-format-android
      #   working-directory: packages/skia
      #   run: yarn clang-format-android --dry-run --Werror

      # - name: Run clang-format-common
      #   working-directory: packages/skia
      #   run: yarn clang-format-common --dry-run --Werror

      - name: Lint Package
        working-directory: packages/skia
        run: yarn lint;

      - name: TypeScript Package
        working-directory: packages/skia
        run: yarn tsc;

      - name: Run Package Unit tests
        working-directory: packages/skia
        run: yarn test;

      - name: Lint Example/Fabric Example
        run: cd ${{ matrix.working-directory }}; yarn lint;

      - name: TypeScript Example/Fabric Example
        run: cd ${{ matrix.working-directory }}; yarn tsc;

      - name: Run Example/Fabric Example Unit tests
        run: cd ${{ matrix.working-directory }}; yarn test;

      - name: TypeScript Example Docs
        run: cd apps/docs; yarn build;
