name: Android

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: macos-12
    strategy:
      matrix:
        working-directory: [apps/paper]
    timeout-minutes: 55
    concurrency:
      group: android-example-${{ matrix.working-directory }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup
        uses: ./.github/actions/setup
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Install NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21d

      - name: Set ANDROID_NDK
        run: echo "ANDROID_NDK=$ANDROID_HOME/ndk-bundle" >> $GITHUB_ENV
              
      - name: SDKs - accept licenses
        run: y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Cache hermes build
        uses: actions/cache@v3
        env:
          cache-name: cache-rn-hermes-engine
        with:
          path: ${{ matrix.working-directory }}/node_modules/react-native
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.working-directory }}-${{ hashFiles('**/react-native/package.json') }}

      - name: Cache android libraries
        uses: actions/cache@v3
        env:
          cache-name: cache-rn
        with:
          path: ${{ matrix.working-directory }}/android/app/build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.working-directory }}-${{ hashFiles('**/react-native/package.json') }}

      - name: Build Android app
        working-directory: ${{ matrix.working-directory }}/android
        run: ./gradlew assembleDebug

      - name: Cache apk
        uses: actions/cache/save@v3
        env:
          cache-name: cache-apk
        with:
          path: ${{ matrix.working-directory }}/android/app/build/outputs/apk/debug/app-debug.apk
          key: apk-${{ github.sha }}
  test:
    needs: build
    runs-on: macos-12
    strategy:
      matrix:
        working-directory: [apps/paper]
    concurrency:
      group: android-example-${{ matrix.working-directory }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup
        uses: ./.github/actions/setup
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Restore APK
        id: cache-apk
        uses: actions/cache/restore@v3
        with:
          path: ${{ matrix.working-directory }}/android/app/build/outputs/apk/debug/app-debug.apk
          key: apk-${{ github.sha }}
      
      - name: SKDs - download required images
        run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-30;default;x86_64"

      - name: Emulator - Create
        run: $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n Pixel_API_30 --device 'Nexus 5X' --package "system-images;android-30;default;x86_64" --sdcard 512M

      - name: Emulator - Boot
        run: $ANDROID_HOME/emulator/emulator -memory 4096 -avd Pixel_API_30 -wipe-data -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim &

      - name: ADB Wait For Device
        run: adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
        timeout-minutes: 10

      # - name: Reverse TCP
      #   working-directory: ${{ matrix.working-directory }}
      #   run: yarn android-reverse-tcp

      - name: Start Package Manager
        working-directory: ${{ matrix.working-directory }}
        run: E2E=true yarn start &

      - name: Check APK existence
        uses: andstor/file-existence-action@v2
        with:
          files: ${{ matrix.working-directory }}/android/app/build/outputs/apk/debug/app-debug.apk
          fail: true

      - name: Install APK
        run: adb install -r ${{ matrix.working-directory }}/android/app/build/outputs/apk/debug/app-debug.apk

      # - name: Set up environment
      #   run: echo "PACKAGE_NAME=${{ env.PACKAGE_NAME }}" >> $GITHUB_ENV
      - name: Launch APK
        env:
          PACKAGE_NAME: ${{ matrix.working-directory == 'fabricexample' && 'com.fabricexample' || 'com.paper' }}  
        run: adb shell monkey -p ${{ env.PACKAGE_NAME }} 1  

      # On fabric, the system fonts are slightly different
      # so wont run the paragraph tests there for now
      - name: Run e2e Tests
        working-directory: packages/skia
        run: |
          if [ "${{ matrix.working-directory }}" = "apps/paper" ]; then
            CI=true yarn e2e
          elif [ "${{ matrix.working-directory }}" = "apps/none" ]; then
            CI=true yarn e2e --testPathIgnorePatterns Paragraphs
          fi

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          path: packages/skia/src/__tests__/snapshots/
          name: ${{ matrix.working-directory }}-snapshots-screenshots

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          path: apps/docs/static
          name: ${{ matrix.working-directory }}-docs-screenshots
      
